
loadRecipe('virtualbox-addons')
#loadInstalled('kernel')

class KmodVirtualboxAddons(VirtualboxAddons):
    name = 'kmod-virtualbox-addons'
    version = VirtualboxAddons.version

    buildRequires = [ 'gcc:rpm',
                      'glib2-devel:rpm',
                      'kernel:rpm',
                      'kernel-devel:rpm',
                      'libicu-devel:rpm',
                      'vim-enhanced:rpm',
                      'redhat-rpm-config:rpm',
                      'tag-kernel',
                    ]

    Flags.debug = False

    def setup(r):
        r.unpackVirtualboxAddons()
        r.makeVirtualboxAddons()


    def unpackVirtualboxAddons(r):
        r.macros.version = r.macros.version.replace('_', '-')
        r.macros.major = r.macros.version.split('-')[0]

        if Arch.x86:
            r.macros.tarball = 'VBoxGuestAdditions-x86.tar.bz2'
        else:
            r.macros.tarball = 'VBoxGuestAdditions-amd64.tar.bz2'

        r.addSource('VBoxGuestAdditions-x86.tar.bz2')
        r.addSource('VBoxGuestAdditions-amd64.tar.bz2')

        # Made available for licensing
        r.addSource('http://download.virtualbox.org/virtualbox/4.3.6/VirtualBox-4.3.6.tar.bz2')

        r.addArchive('%(tarball)s', dir='%(maindir)s')

        r.addPatch('makefile_footer.patch')
        
        # Ripping out vboxvideo because of drm abi breakage
        r.addPatch('remove-vboxvideo.patch') 


    def detectKVers(r):
        """
        Find the kver for all kernel modules that have been installed.
        """
        import glob
        testPath = '/lib/modules/*'

        buildTrees = glob.glob(testPath)
        if len(buildTrees) == 0:
            raise RuntimeError("No kernel modules found.")

        kvers = [ x.split('/')[-1] for x in buildTrees ]

        return kvers

    def makeVirtualboxAddons(r):
        # Build VMware kernel modules
        # Insert logic to determine kernel flavor here

        r.macros.variant = ''
        if Flags.debug:
            # assume debug kernel
            #r.macros.variant = '.debug'
            r.macros.variant = ''

        KernelVer = r.detectKVers()[0]
        r.macros.kvers = '%s%s' % (KernelVer, r.macros.variant)
        r.macros.kmoddir = '%(destdir)s/lib/modules/%(kvers)s/kernel/extra'
        r.macros.kdevel = '../../%(kvers)s'
        r.macros.kinclude = 'src/%(kvers)s/include'
        r.macros.vboxsrc = 'src/vboxguest-%(major)s'

        # Copy the kernel source into the build
        # Necessary for the upcoming hack
        r.Copy('../../../../../../../usr/src/kernels/%(kvers)s', 'src/')


        # Currently I had to remove this because drm kernel abi breaks 
        # between 2.6.32-279 and 2.6.32-358
        # HACK HACK HACK FIXME 
        # drm includes is missing some files it needs... blame someone
        # see http://wiki.centos.org/HowTos/Virtualization/VirtualBox/CentOSguest
        #for dfix in ('drm.h', 'drm_sarea.h', 'drm_mode.h', 'drm_fourcc.h'):
        #    r.Copy('../../../../../../../usr/include/drm/' + dfix, '%(kinclude)s/drm/')
        # END HACK

        r.Make('KERN_DIR=%(kdevel)s', dir = '%(vboxsrc)s')
        r.MakeInstall('KERN_DIR=%(kdevel)s '
                'MODULE_DIR=%(kmoddir)s/virtualbox-addons '
                'KERNEL_VER=%(kvers)s ', dir = '%(vboxsrc)s')
        

